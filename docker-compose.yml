#health check:
  #Exec form is preferred because it avoids shell parsing issues
  #test: ["CMD", "curl", "-k", "-f", "https://localhost/"]
    #test: the health check command , dokcer runs to see 
    #if the container is healthy
    #CMD: tells docker:
      #1. Run the command inside the container
      #2. Don’t use a shell (/bin/sh) unless you specifically call it.
      
#wordpress_data is a Docker volume created for WordPress files.
#/var/www/html is the folder inside the Nginx container where it expects website files.
#it connects Nginx’s /var/www/html directly to the existing WordPress volume.
services:
  nginx:
    build: ./srcs/requirements/nginx
    container_name: nginx
    depends_on:
      - wordpress
    ports:
      - "443:443"
    volumes:
      - ./srcs/requirements/nginx/ssl:/etc/nginx/ssl
      - wordpress_data:/var/www/html
    networks:
      - inception-net
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -k https://localhost/ || exit 0"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  mariadb:
    build: ./srcs/requirements/mariadb
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - inception-net
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uroot", "-p$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  wordpress:
    build: ./srcs/requirements/wordpress
    container_name: wordpress
    restart: always
    depends_on:
      - mariadb
      - redis
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      DOMAIN_NAME: ${DOMAIN_NAME}
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - inception-net
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -v grep | grep 'php-fpm' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  redis:
    build: ./srcs/requirements/bonus/redis_cache
    container_name: redis
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - inception-net
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
  ftp:
    build: ./srcs/requirements/bonus/ftp_server
    container_name: ftp
    restart: always
    environment:
      FTP_USR: ${FTP_USR}
      FTP_PWD: ${FTP_PWD}
    ports:
      - 21:21
      - 21000-21010:21000-21010
    volumes:
      - wordpress_data:/var/www/html
     
  adminer:
    build: ./srcs/requirements/bonus/adminer
    container_name: adminer
    networks:
      - inception-net
    depends_on:
      - mariadb
    ports:
      - 8080:8080
    restart: always

volumes:
  mariadb_data:
  wordpress_data:
  redis_data:

networks:
  inception-net:
    name: 42inception_inception-net
    driver: bridge
